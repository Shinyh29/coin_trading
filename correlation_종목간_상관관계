## After ___for_Koscom_testbed 실행한 후 에


corrs = table_rChange.corr()

 # HeatMap _ Correlation 히트맵 상관관계 
plt.imshow(corrs, cmap = 'hot', interpolation = 'none')
plt.colorbar()
plt.xticks(range(len(corrs)), corrs.columns)
plt.yticks(range(len(corrs)), corrs.columns)
plt.gcf().set_size_inches(10,10)



## -------------------------------------------------------------------
# 변동성 측정
min_num = 75
vol = table_rChange.rolling(window = min_num).std() * np.sqrt(min_num)
vol.plot(figsize = (10, 5))


## -------------------------------------------------------------------
# 위험대비 수익률 산점도 

plt.scatter(table_rChange.mean(), table_rChange.std())
plt.xlabel('Excpected RETURNS')
plt.ylabel('RISK')

for label, x,y in zip(table_rChange.columns, table_rChange.mean(), table_rChange.std()):
    plt.annotate( label, xy = (x,y), xytext = (30,-30), \
    textcoords = 'offset points', ha = 'right', \
    va = 'bottom', \
    bbox = dict(boxstyle = 'round, pad = 0.5' , fc = 'yellow', alpha = 0.5), \
    arrowprops = dict(arrowstyle = '->', connectionstyle = 'arc3, rad=0' ))
    
## set range / scale / 
plt.xlim( 0.9995, 1.001)
plt.ylim(0.005, 0.02)

## set size
plt.gcf().set_size_inches(4,4)

