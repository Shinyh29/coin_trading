# Koscom_로보어드바이저 Testbed 알고리즘모델
# (1) 모델에 대한 경제적인 관점 먼저 -> (2) 알고리즘 
# 1. 종목별비중 // 2. 일별수익률 // 3. 자산군별 Daily비중

plt.rcParams["figure.figsize"] = (10,2)
import FinanceDataReader as fdr
import pandas as pd
import numpy as np
#%matplotlib inline
import matplotlib.pyplot as plt

table_신호 = pd.DataFrame()
table_모멘텀 = pd.DataFrame() 


table_today_macdos = []
today_macdos = []
tomorrow_macdos = []
## 두리스트 초기화

## ticker = list(universe.keys())[0]

n = 0
def today_macdo_get(ticker, startdate):

    print(ticker)
    print(name)

    df = fdr.DataReader(ticker, startdate)
    # 최근부터  보기싫은 일자 Date 숫자로 전달 n 
    #n = 150
    #df = df[:-n]

    def get_macd(df , short = 12 , long = 26, t=9):
        df = pd.DataFrame(df)
        ma_12 = df.Close.ewm(span=12).mean()
        ma_26 = df.Close.ewm(span=26).mean()
        macd = ma_12 - ma_26
        macds = macd.ewm(span=9).mean()
        macdo = macd - macds
        df = df.assign(macd= macd, macds= macds, macdo = macdo).dropna()
        return df



    df_macdplus = get_macd(df)
    df_macdplus = get_macd(df)
    df = df_macdplus
    df['Zeros'] = 0
    df['rChange'] = df['Change'] + 1
    df['osc_on'] = np.where(df['macdo'].shift(-1) > df['Zeros'], df['Change']+1, 1)
    df['test'] = np.where(df['osc_on'] >= df['rChange'], 1, 0)
    rolling_test = df['test'].rolling(window=25).sum()/25 * 100
    df['rolling25_test'] = rolling_test

    # 전일자 의 macdo 가 0보다 크다면,  오늘자의 Change 상승률 Long포지션
    # "" 0보다 작다면, 오늘자의 Change 상승률 포지션은 현금보유(전량매도) ==1

    #### ------여기부터 For Koscom Testbed
    df['Position'] = np.where(df['macdo'] > df['Zeros'], 1, 0)
    table_신호[ticker] = df['Position']         
    table_모멘텀[ticker] = df['Close'] / df['Close'].shift(5)




## 실행 >>>today_macdo_get(ticker,'2017')
## ---------------------------------------------------------------------------------------------------
table_today_macdos = []
today_macdos = []
tomorrow_macdos = []
table_신호 = pd.DataFrame()
table_모멘텀 = pd.DataFrame()
## 두리스트 초기화
n = 0
for unit in list(universe.keys()):
    ticker = unit
    n = n+1
    name = universe[ticker]
    today_macdo_get(ticker,'2019-05')
    print("---------------------------------------")


table_today_macdos = pd.DataFrame()

table_비중 = table_신호 * table_모멘텀
SSum = table_비중.sum(axis=1)

    
print(table_신호.tail())
print(table_모멘텀.tail())
print(table_비중.tail()) 
#print(table_신호.values[-2])
#print(table_모멘텀.values[-2])
#print(table_비중.values[-2])
## 전체실행 --------------------------------------------------------------------------------------
