# Koscom_로보어드바이저 Testbed 알고리즘모델
# (1) 모델에 대한 경제적인 관점 먼저 -> (2) 알고리즘 
# 1. 종목별비중 // 2. 일별수익률 // 3. 자산군별 Daily비중

'''
table_신호 = pd.DataFrame()
table_비중 = pd.DataFrame()
# 논리 :: 
비중_모멘텀 = (price.Close / price.Close [-5])
비중_모멘텀 = 비중_모멘텀 / sum(종목별_(Daily)비중_모멘텀) ##'%==float  '
table_비중['종목'] = np.where(table_신호.인자 = 1 , 비중_모멘텀 , 0)
table_상승률 = pd.DataFrame()
## 종목군별 평가금액 상승률  = (table)비중 * 상승률 = 종목별_상승률 
## table_Port = 전체평가금액 * 종목군별 평가금액 상승률
table_Port평가금액 =(  (table_상승률.Date) * (table_비중.Date) ##행렬곱(벡터내적) ).cumprod() #누적수익률 * 원금_평가금액
'''


df_score = pd.DataFrame(np.where(df.macdo > df.Zeros, 1, 0), index = df.index)

table_신호 = pd.DataFrame()
for unit in range(0, len(universe)):
    unit = int(unit)
    ticker = list(universe.keys())[unit]
    
    ### df. ~~ macdo 포지션 구축 함수
    # ticker 에따라 df.test가 바뀌어야함
    table_신호[ticker] = df.test
print(table_신호)



'''
## 지금보여주는 마지막 row(오늘자) 보다 하루전날(전일자)것 == 뒤에서두번째열 df['macdo'][-2]
print("어제의_macdo : ",  df['macdo'][-2])
print("오늘의_포지션 : ",  np.where(df['macdo'][-2]>0, 'Long포지션', 'Cash'))
print("-----")
print("오늘의_macdo : ",  df['macdo'][-1])
print("내일의_포지션 : ",  np.where(df['macdo'][-1]>0, 'Long포지션', 'Cash'))     
'''



''' 주석
            069500  114800  229200  251340  192090  169950  099140  133690  \
Date                                                                         
2015-09-24       1       1       1       1       1       1       1       1   
2015-09-25       1       1       1       1       1       1       1       1   
2015-09-30       1       1       1       1       1       1       1       1   
2015-10-01       0       0       0       0       0       0       0       0   
2015-10-02       1       1       1       1       1       1       1       1   
2015-10-05       1       1       1       1       1       1       1       1   
2015-10-06       1       1       1       1       1       1       1       1   
2015-10-07       1       1       1       1       1       1       1       1   
2015-10-08       1       1       1       1       1       1       1       1   
2015-10-12       1       1       1       1       1       1       1       1   
2015-10-13       1       1       1       1       1       1       1       1   
2015-10-14       1       1       1       1       1       1       1       1   
2015-10-15       0       0       0       0       0       0       0       0   
2015-10-16       1       1       1       1       1       1       1       1   
2015-10-19       1       1       1       1       1       1       1       1   
2015-10-20       1       1       1       1       1       1       1       1   
2015-10-21       1       1       1       1       1       1       1       1   
2015-10-22       1       1       1       1       1       1       1       1   
'''
