## 1. universe 를 먼저 만듦
## 2. macdo_Backtest (어제의 종가까지로 오늘의 포지션판단) 한종목씩 결과값을 pd.DataFrame == today_macdos 에 담기
## 클래스로 만들면 좋겠네, 추후 HW

# 단일종목 2. 의 함수화. today_macdos_change, today_macdos에 오늘자 판단, 상승률 넣기
# for loop 로  universe.keys() 의 코드들을 전달. 

## Ex) list(universe.keys())[0]
##      Out[107]: '069500'
plt.rcParams["figure.figsize"] = (7,4)
import FinanceDataReader as fdr
import pandas as pd
import numpy as np
#%matplotlib inline
import matplotlib.pyplot as plt

table_today_macdos = []
table_today_macdos = []
today_macdos = []
tomorrow_macdos = []
## 두리스트 초기화

## ticker = list(universe.keys())[0]

n = 0
def today_macdo_get(ticker, startdate):
    
    print(ticker)
    print(name)

    df = fdr.DataReader(ticker, startdate)
    # 최근부터  보기싫은 일자 Date 숫자로 전달 n 
    #n = 150
    #df = df[:-n]

    def get_macd(df , short = 12 , long = 26, t=9):
        df = pd.DataFrame(df)
        ma_12 = df.Close.ewm(span=12).mean()
        ma_26 = df.Close.ewm(span=26).mean()
        macd = ma_12 - ma_26
        macds = macd.ewm(span=9).mean()
        macdo = macd - macds
        df = df.assign(macd= macd, macds= macds, macdo = macdo).dropna()
        return df



    df_macdplus = get_macd(df)
    df_macdplus = get_macd(df)
    df = df_macdplus
    df['Zeros'] = 0

    # 전일자 의 macdo 가 0보다 크다면,  오늘자의 Change 상승률 Long포지션
    # "" 0보다 작다면, 오늘자의 Change 상승률 포지션은 현금보유(전량매도) ==1
    df['osc_on'] = np.where(df['macdo'].shift(-1) > df['Zeros'], df['Change']+1, 1)
    print(n)
    plt.figure(n)
    plt.plot(df.index, df['osc_on'].cumprod(), label = name)
    
    ## 지금보여주는 마지막 row(오늘자) 보다 하루전날(전일자)것 == 뒤에서두번째열 df['macdo'][-2]
    print("어제의_macdo : ",  df['macdo'][-2])
    print("오늘의_포지션 : ",  np.where(df['macdo'][-2]>0, 'Long포지션', 'Cash'))
    print("-----")
    print("오늘의_macdo : ",  df['macdo'][-1])
    print("내일의_포지션 : ",  np.where(df['macdo'][-1]>0, 'Long포지션', 'Cash'))       


    plt.legend(loc='lower left')
    today_판단 = np.where(df['macdo'][-2]>0, 1, 0)
    tomorrow_판단 = np.where(df['macdo'][-1]>0, 1, 0)
    print(df[-2::])
    plt.plot((df['Change']+1).cumprod())
    plt.figure(100)
    plt.plot(df.index, df['osc_on'].cumprod(), label = name)
    plt.legend(loc='lower left')
    # Out[19]: <matplotlib.axes._subplots.AxesSubplot at 0x9f26550>'''
    today_macdos.append(today_판단)
    tomorrow_macdos.append(tomorrow_판단)
    
    
## 실행 >>>today_macdo_get(ticker,'2017')
## ---------------------------------------------------------------------------------------------------
table_today_macdos = []
today_macdos = []
tomorrow_macdos = []
## 두리스트 초기화
n = 0
for unit in list(universe.keys()):
    ticker = unit
    n = n+1
    name = universe[ticker]
    today_macdo_get(ticker,'2017')
    print("---------------------------------------")


table_today_macdos = pd.DataFrame()


add_series = pd.Series(today_macdos, index = range(0,len(universe)))
table_today_macdos['오늘m'] = add_series

add_series = pd.Series(tomorrow_macdos, index = range(0,len(universe)))
table_today_macdos['내일m'] = add_series

#add_series = pd.Series(tomorrow_macdos, index = range(0,len(universe)))
table_today_macdos['변경'] = table_today_macdos.오늘m == table_today_macdos.내일m

add_series = pd.Series(list(universe.values()), index = range(0,len(universe)))
table_today_macdos['names'] = add_series

#table_today_macdos.rename(columns={table_today_macdos.columns[0]:'Positions'}, inplace=True)
## df 의 첫밴쨰 컬럼명을 변경
print(table_today_macdos)
#plt.show()
## 전체실행 ---------------------------------------------------------------------------------------------
