## 1. universe 를 먼저 만듦
## 2. macdo_Backtest (어제의 종가까지로 오늘의 포지션판단) 한종목씩 결과값을 pd.DataFrame == today_macdos 에 담기
## 클래스로 만들면 좋겠네, 추후 HW

# 단일종목 2. 의 함수화. today_macdos_change, today_macdos에 오늘자 판단, 상승률 넣기
# for loop 로  universe.keys() 의 코드들을 전달. 

## Ex) list(universe.keys())[0]
##      Out[107]: '069500'

ticker = list(universe.keys())[0]
def today_macdo_get(ticker, startdate):

    print(ticker)
    print(name)
    
    df = fdr.DataReader(ticker, startdate)
    # 최근부터  보기싫은 일자 Date 숫자로 전달 n 
    #n = 150
    #df = df[:-n]

    def get_macd(df , short = 12 , long = 26, t=9):
        df = pd.DataFrame(df)
        ma_12 = df.Close.ewm(span=12).mean()
        ma_26 = df.Close.ewm(span=26).mean()
        macd = ma_12 - ma_26
        macds = macd.ewm(span=9).mean()
        macdo = macd - macds
        df = df.assign(macd= macd, macds= macds, macdo = macdo).dropna()
        return df



    df_macdplus = get_macd(df)
    df_macdplus = get_macd(df)
    df = df_macdplus
    df['Zeros'] = 0

    # 전일자 의 macdo 가 0보다 크다면,  오늘자의 Change 상승률 Long포지션
    # "" 0보다 작다면, 오늘자의 Change 상승률 포지션은 현금보유(전량매도) ==1
    df['osc_on'] = np.where(df['macdo'].shift(-1) > df['Zeros'], df['Change']+1, 1)
    df['osc_on'].cumprod().plot()
    ## 지금보여주는 마지막 row(오늘자) 보다 하루전날(전일자)것 == 뒤에서두번째열 df['macdo'][-2]
    print("어제의_macdo : ",  df['macdo'][-2])
    print("오늘의_포지션 : ",  np.where(df['macdo'][-2]>0, 'Long포지션', 'Put or Cash포지션'))
    #print(df.tail())
    (df['Change']+1).cumprod().plot()
    # Out[19]: <matplotlib.axes._subplots.AxesSubplot at 0x9f26550>'''
    
## 실행 >>>today_macdo_get(ticker,'2017')


for unit in list(universe.keys()):
    ticker = unit
    name = universe[ticker]
    today_macdo_get(ticker,'2017')
## 전체실행 
